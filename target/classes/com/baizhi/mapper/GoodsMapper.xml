<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.baizhi.entity.Goods">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="seller" jdbcType="VARCHAR" property="seller" />
    <result column="put_time" jdbcType="TIMESTAMP" property="putTime" />
    <result column="theme_id" jdbcType="VARCHAR" property="themeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.baizhi.entity.Goods">
    <result column="instructions" jdbcType="LONGVARCHAR" property="instructions" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, specifications, price, sales, seller, put_time, theme_id
  </sql>
  <sql id="Blob_Column_List">
    instructions
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.baizhi.entity.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kf_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.baizhi.entity.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kf_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kf_goods
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from kf_goods
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.baizhi.entity.GoodsExample">
    delete from kf_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.baizhi.entity.Goods">
    insert into kf_goods (id, name, specifications, 
      price, sales, seller, 
      put_time, theme_id, instructions
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{sales,jdbcType=INTEGER}, #{seller,jdbcType=VARCHAR}, 
      #{putTime,jdbcType=TIMESTAMP}, #{themeId,jdbcType=VARCHAR}, #{instructions,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.baizhi.entity.Goods">
    insert into kf_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="seller != null">
        seller,
      </if>
      <if test="putTime != null">
        put_time,
      </if>
      <if test="themeId != null">
        theme_id,
      </if>
      <if test="instructions != null">
        instructions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="seller != null">
        #{seller,jdbcType=VARCHAR},
      </if>
      <if test="putTime != null">
        #{putTime,jdbcType=TIMESTAMP},
      </if>
      <if test="themeId != null">
        #{themeId,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baizhi.entity.GoodsExample" resultType="java.lang.Long">
    select count(*) from kf_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kf_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.seller != null">
        seller = #{record.seller,jdbcType=VARCHAR},
      </if>
      <if test="record.putTime != null">
        put_time = #{record.putTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.themeId != null">
        theme_id = #{record.themeId,jdbcType=VARCHAR},
      </if>
      <if test="record.instructions != null">
        instructions = #{record.instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update kf_goods
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      sales = #{record.sales,jdbcType=INTEGER},
      seller = #{record.seller,jdbcType=VARCHAR},
      put_time = #{record.putTime,jdbcType=TIMESTAMP},
      theme_id = #{record.themeId,jdbcType=VARCHAR},
      instructions = #{record.instructions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kf_goods
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      sales = #{record.sales,jdbcType=INTEGER},
      seller = #{record.seller,jdbcType=VARCHAR},
      put_time = #{record.putTime,jdbcType=TIMESTAMP},
      theme_id = #{record.themeId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baizhi.entity.Goods">
    update kf_goods
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="seller != null">
        seller = #{seller,jdbcType=VARCHAR},
      </if>
      <if test="putTime != null">
        put_time = #{putTime,jdbcType=TIMESTAMP},
      </if>
      <if test="themeId != null">
        theme_id = #{themeId,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        instructions = #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.baizhi.entity.Goods">
    update kf_goods
    set name = #{name,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      sales = #{sales,jdbcType=INTEGER},
      seller = #{seller,jdbcType=VARCHAR},
      put_time = #{putTime,jdbcType=TIMESTAMP},
      theme_id = #{themeId,jdbcType=VARCHAR},
      instructions = #{instructions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baizhi.entity.Goods">
    update kf_goods
    set name = #{name,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      sales = #{sales,jdbcType=INTEGER},
      seller = #{seller,jdbcType=VARCHAR},
      put_time = #{putTime,jdbcType=TIMESTAMP},
      theme_id = #{themeId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>